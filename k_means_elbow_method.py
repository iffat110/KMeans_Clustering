# -*- coding: utf-8 -*-
"""K_Means_Elbow_Method.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mXi8Cxk_ST_LF03pVj6hKIpM2kPp14Df
"""

import pandas as pd

file_path = 'shopping_trends.csv'
data = pd.read_csv(file_path)

data.head(), data.info()

from sklearn.preprocessing import LabelEncoder, StandardScaler

label_encoders = {}
for column in data.select_dtypes(include=['object']).columns:
  label_encoders[column] = LabelEncoder()
  data[column] = label_encoders[column].fit_transform(data[column])


scaler = StandardScaler()
data_scaled = scaler.fit_transform(data.drop(columns=['Customer ID']))

data_scaled_df = pd.DataFrame(data_scaled, columns=data.columns[1:])

data_scaled_df.head()

"""## Elbow Curve"""

import numpy as np
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

K = range(1, 21)

inertia = []

for i in K:
  k_means = KMeans(n_clusters = i, random_state = 2)
  k_means.fit(data_scaled_df)
  inertia.append(k_means.inertia_)

for i, score in zip(K, inertia):
  print(f'K: {i}, Inertia: {score}')


plt.figure(figsize=(8, 6))
plt.plot(K, inertia, 'bo-')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')

list1 = [1,2,3]
list2 = ['a', 'b', 'c']

zipped = zip(list1, list2)

# X=list(zipped)
# print(X)

for i, j in zip(list1, list2):
  print(f'first value: {i}, second value: {j}')